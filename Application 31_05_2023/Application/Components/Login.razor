@page "/Login"
@page "/Login/{password}"
@inject NavigationManager Nav;
@inject IJSRuntime JSRuntime
@using Microsoft.JSInterop;
@using Models
<style>
    .submit_btn {
        margin: 20px;
        border: aliceblue;
    }


    .form-group {
        margin: 10px;
        align-content:center;
    }
</style>
<h3>Login</h3>
<EditForm Model="@entitys" OnInvalidSubmit="Submit">
    <DataAnnotationsValidator/>
<div class="form-group">
    <label for="username">Username</label>
        <input type="text" id="username" class="form-control" @bind="@entitys.UserName" />
        <ValidationMessage For="()=>entitys.UserName" />
</div>
<div class="form-group">
    <label for="username">Password</label>
        <input type="text" id="username" class="form-control" @bind="@entitys.password" />
        <ValidationMessage For="()=>entitys.password" />
</div>

<button class="submit_btn" @onclick="Submit">Login</button>

<button class="submit_btn" @onclick="Register">Registeration</button>
</EditForm>









@code {
    Entitys entitys = new Entitys();
    [Parameter]
    public string password { get; set; }

    private async Task Submit()
    {
        if (entitys.password == password && entitys.password != null)
        {
            // Console.WriteLine("Logged successfull");
            Nav.NavigateTo("/MainPage");
        }
        else
        {
            await JSRuntime.InvokeVoidAsync("alert", "Login Failed");
        }
        Console.WriteLine("OnInvalidSubmit");
    }
    private void Register()
    {
        Nav.NavigateTo("/Register");
        
    }
}
